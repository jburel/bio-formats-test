<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
    http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ome</groupId>
  <artifactId>bio-formats-test</artifactId>
  <version>5.8.2</version>

  <name>Bio-Formats testing framework</name>
  <description>A framework for manual and automated testing, in particular data-driven Bio-Formats testing.</description>
  <url>http://www.openmicroscopy.org/site/products/bio-formats</url>
  <inceptionYear>2006</inceptionYear>
  <organization>
    <name>Open Microscopy Environment</name>
    <url>http://www.openmicroscopy.org/</url>
  </organization>
  <licenses>
    <license>
      <name>GNU General Public License v2+</name>
      <url>http://www.gnu.org/licenses/gpl-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>The OME Team</name>
      <email>ome-devel@lists.openmicroscopy.org.uk</email>
    </developer>
  </developers>
  <contributors>
    <contributor><name>Chris Allan</name></contributor>
    <contributor><name>Colin Blackburn</name></contributor>
    <contributor><name>Mark Carroll</name></contributor>
    <contributor><name>Jean-Marie Burel</name></contributor>
    <contributor><name>SÃ©bastien Besson</name></contributor>
    <contributor><name>Helen Flynn</name></contributor>
    <contributor><name>David Gault</name></contributor>
    <contributor><name>Mark Hiner</name></contributor>
    <contributor><name>Roger Leigh</name></contributor>
    <contributor><name>Simone Leo</name></contributor>
    <contributor><name>Melissa Linkert</name></contributor>
    <contributor><name>Allison McArton</name></contributor>
    <contributor><name>Josh Moore</name></contributor>
    <contributor><name>Andrew Patterson</name></contributor>
    <contributor><name>Blazej Pindelski</name></contributor>
    <contributor><name>Curtis Rueden</name></contributor>
    <contributor><name>Christoph Sommer</name></contributor>
    <contributor><name>Bjoern Thiel</name></contributor>
  </contributors>

  <mailingLists>
    <mailingList>
      <name>OME-users</name>
      <subscribe>http://lists.openmicroscopy.org.uk/mailman/listinfo/ome-users/</subscribe>
      <unsubscribe>http://lists.openmicroscopy.org.uk/mailman/listinfo/ome-users/</unsubscribe>
      <post>ome-users@lists.openmicroscopy.org.uk</post>
      <archive>http://lists.openmicroscopy.org.uk/pipermail/ome-users/</archive>
    </mailingList>
    <mailingList>
      <name>OME-devel</name>
      <subscribe>http://lists.openmicroscopy.org.uk/mailman/listinfo/ome-devel/</subscribe>
      <unsubscribe>http://lists.openmicroscopy.org.uk/mailman/listinfo/ome-devel/</unsubscribe>
      <post>ome-devel@lists.openmicroscopy.org.uk</post>
      <archive>http://lists.openmicroscopy.org.uk/pipermail/ome-devel/</archive>
    </mailingList>
  </mailingLists>

  <prerequisites>
    <maven>3.0.5</maven>
  </prerequisites>

  <!-- NB: for parent project -->
  <repositories>
    <repository>
      <id>central</id>
      <name>Central Repository</name>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
    <repository>
      <id>unidata.releases</id>
      <url>https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases</url>
      <snapshots><enabled>false</enabled></snapshots>
      </repository>
    <repository>
      <id>ome</id>
      <name>OME Artifactory</name>
      <url>https://artifacts.openmicroscopy.org/artifactory/maven/</url>
    </repository>
  </repositories>

  <scm>
    <connection>scm:git:https://github.com/ome/ome-common-java</connection>
    <developerConnection>scm:git:git@github.com:ome/ome-common-java</developerConnection>
    <tag>HEAD</tag>
    <url>http://github.com/ome/ome-common-java</url>
  </scm>
  <issueManagement>
    <system>Trac</system>
    <url>https://trac.openmicroscopy.org/ome</url>
  </issueManagement>
  <ciManagement>
    <system>Jenkins</system>
    <url>https://ci.openmicroscopy.org/</url>
  </ciManagement>
  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>formats-gpl</artifactId>
      <version>${formats-gpl.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${logback.version}</version>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.2</version>
    </dependency>
    <dependency>
      <groupId>org.perf4j</groupId>
      <artifactId>perf4j</artifactId>
      <version>0.9.13</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>${testng.version}</version>
    </dependency>
    <dependency>
      <groupId>nl.javadude.assumeng</groupId>
      <artifactId>assumeng</artifactId>
      <version>1.2.4</version>
    </dependency>
  </dependencies>

  <properties>
    <!-- If two artifacts on the classpath use two different versions of the
         same dependency, behavior is inconsistent at best, and often broken.
         The following properties facilitate consistency of dependency
         versions between various projects in the SciJava software stack.
         When possible, we advise using the relevant groupId and version
         properties for your dependencies rather than hardcoding them. -->

    <bioformats.version>5.10.0-SNAPSHOT</bioformats.version>
    <formats-gpl.version>5.10.0-SNAPSHOT</formats-gpl.version>
    <logback.version>1.1.1</logback.version>
    <ome-stubs.version>5.3.3-SNAPSHOT</ome-stubs.version>
    <lwf-stubs.version>5.3.3-SNAPSHOT</lwf-stubs.version>
    <mipav-stubs.version>5.3.3-SNAPSHOT</mipav-stubs.version>
    <ome-metakit.version>5.3.0</ome-metakit.version>
    <metakit.version>5.3.3-SNAPSHOT</metakit.version>
    <slf4j.version>1.7.6</slf4j.version>
    <testng.version>6.8</testng.version>

    <surefire-plugin.version>2.22.0</surefire-plugin.version>

    <!-- NB: Avoid platform encoding warning when copying resources. -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- NB: Specify formatting of the maven.build.timestamp property. -->
    <maven.build.timestamp.format>d MMMMM yyyy</maven.build.timestamp.format>

    <!-- NB: Override argLine property for extra maven-surefire-plugin args. -->
    <argLine/>

    <!-- Test properties -->
    <testng.toplevel-config></testng.toplevel-config>
    <testng.directory-prefix></testng.directory-prefix>
    <testng.directory-list></testng.directory-list>
    <testng.filename></testng.filename>
    <testng.directory></testng.directory>
    <testng.omexmlDirectory></testng.omexmlDirectory>
    <testng.configDirectory></testng.configDirectory>
    <testng.configSuffix></testng.configSuffix>
    <testng.allow-missing></testng.allow-missing>
    <testng.multiplier></testng.multiplier>
    <lurawave.license></lurawave.license>
    <testng.in-memory></testng.in-memory>
    <testng.memory>512m</testng.memory>

    <testng.threadCount>2</testng.threadCount>
    <testng.groups></testng.groups>
    <testconfig>src/test/resources/testng.xml</testconfig>

    <user.language>en</user.language>
    <user.country>US</user.country>
   </properties>

  <build>
    <!-- It is nice for "mvn" with no arguments to do something reasonable. -->
    <defaultGoal>install</defaultGoal>

    <resources>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources-filtered</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <!-- Require the Java 7 platform. -->
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>

      <!-- Enable 'license:' goals. -->
      <!-- License Maven plugin -
           http://mojo.codehaus.org/license-maven-plugin/
           This plugin manages project licenses and source file headers. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>1.16</version>
        <configuration>
          <licenseName>bsd_2</licenseName>
          <organizationName>Open Microscopy Environment:
  - Board of Regents of the University of Wisconsin-Madison
  - Glencoe Software, Inc.
  - University of Dundee</organizationName>
          <projectName>Common package for I/O and related utilities</projectName>
          <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
          <canUpdateDescription>true</canUpdateDescription>
          <!-- NB: Avoid stomping on variant copyright holders. -->
          <canUpdateCopyright>false</canUpdateCopyright>
          <roots>
            <root>src</root>
          </roots>
          <extraExtensions>
            <bsh>java</bsh>
            <config>properties</config>
            <ijm>java</ijm>
          </extraExtensions>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <testng.toplevel-config>${testng.toplevel-config}</testng.toplevel-config>
            <testng.directory-prefix>${testng.directory-prefix}</testng.directory-prefix>
            <testng.directory-list>${testng.directory-list}</testng.directory-list>
            <testng.filename>${testng.filename}</testng.filename>
            <testng.directory>${testng.directory}</testng.directory>
            <testng.omexmlDirectory>${testng.omexmlDirectory}</testng.omexmlDirectory>
            <testng.configDirectory>${testng.configDirectory}</testng.configDirectory>
            <testng.configSuffix>${testng.configSuffix}</testng.configSuffix>
            <testng.allow-missing>${testng.allow-missing}</testng.allow-missing>
            <testng.multiplier>${testng.multiplier}</testng.multiplier>
            <lurawave.license>${lurawave.license}</lurawave.license>
            <testng.in-memory>${testng.in-memory}</testng.in-memory>
            <bioformats_can_do_upgrade_check>false</bioformats_can_do_upgrade_check>
          </systemPropertyVariables>
          <argLine>-Xmx${testng.memory} -Duser.language=${user.language} -Duser.country=${user.country}</argLine>
          <suiteXmlFiles>
            <suiteXmlFile>${testconfig}</suiteXmlFile>
          </suiteXmlFiles>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>
        <executions>
          <execution>
            <id>uberjar</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <finalName>bftest</finalName>
              <descriptors>
                <descriptor>assembly.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.1.0</version>
      </plugin>

      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
      </plugin>

      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.2</version>
      </plugin>

      <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <version>2.5.2</version>
      </plugin>

      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.1.0</version>
        <!-- Always add classpath to JAR manifests. -->
        <configuration>
          <skipIfEmpty>true</skipIfEmpty>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
            <manifestEntries>
              <!-- Add SCM revision from buildnumber plugin, if available. -->
              <Implementation-Build>${buildNumber}</Implementation-Build>
              <!-- Add a formatted timestamp for the build. -->
              <Implementation-Date>${maven.build.timestamp}</Implementation-Date>
            </manifestEntries>
          </archive>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>3.5.2</version>
      </plugin>

      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.3</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.scm</groupId>
            <artifactId>maven-scm-provider-gitexe</artifactId>
            <version>1.9</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
      </plugin>

      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.7.1</version>
      </plugin>

      <!-- Create -sources.jar when building. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.0.1</version>
        <!-- Build source artifact in addition to main artifact. -->
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Build Number Maven plugin -
           http://mojo.codehaus.org/buildnumber-maven-plugin/
           This plugin embeds a build number in the JAR manifest. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>1.4</version>
        <!-- Record SCM revision in manifest. -->
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
          <revisionOnScmFailure>UNKNOWN</revisionOnScmFailure>
        </configuration>
      </plugin>

      <!-- Versions Maven plugin -
           http://mojo.codehaus.org/versions-maven-plugin/
           Check for new plugin versions using
           "mvn versions:display-plugin-updates" -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.5</version>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- Build javadocs by default, but not when running tests -->
      <id>javadoc</id>
      <activation>
        <property>
          <name>!testng.directory</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.0.1</version>
            <configuration>
              <failOnError>false</failOnError>
              <links>
                <link>http://docs.oracle.com/javase/7/docs/api/</link>
              </links>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>testname-property</id>
      <activation>
        <property>
          <name>filename</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <id>regex-testname-property</id>
                <goals>
                  <goal>regex-property</goal>
                </goals>
                <configuration>
                  <name>testname</name>
                  <value>${filename}</value>
                  <regex>/</regex>
                  <replacement>_</replacement>
                  <failIfNoMatch>false</failIfNoMatch>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Tests for leaking file handles -->
      <id>test-file-handles</id>
      <properties>
        <testclass>loci.tests.testng.FileHandleTest</testclass>
        <testconfig>target/test-classes/testng-single.xml</testconfig>
      </properties>
    </profile>
    <profile>
      <!-- Tests for open bytes performance -->
      <id>test-open-bytes-performance</id>
      <properties>
        <testclass>loci.tests.testng.OpenBytesPerformanceTest</testclass>
        <testconfig>target/test-classes/testng-single.xml</testconfig>
      </properties>
    </profile>
    <profile>
      <!-- Tests for TIFF writing (conversion) -->
      <id>test-tiff-writer</id>
      <properties>
        <testclass>loci.tests.testng.TiffWriterTest</testclass>
        <testconfig>target/test-classes/testng-single.xml</testconfig>
      </properties>
    </profile>
    <profile>
      <!-- Tests for file writing (conversion) -->
      <id>test-convert</id>
      <properties>
        <testng.testname>Writer tests</testng.testname>
        <testng.group>all</testng.group>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <suiteXmlFiles>
                <suiteXmlFile>target/test-classes/testng-reader-order.xml</suiteXmlFile>
              </suiteXmlFiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Tests for file reading (all) -->
      <id>test-all</id>
      <properties>
        <testng.testname>All reader tests</testng.testname>
        <testng.group>all</testng.group>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <suiteXmlFiles>
                <suiteXmlFile>target/test-classes/testng-reader-dot-order.xml</suiteXmlFile>
              </suiteXmlFiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Generate configuration files for test suite -->
      <id>gen-config</id>
      <properties>
        <testng.testname>Configuration generation</testng.testname>
        <testng.group>config</testng.group>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <suiteXmlFiles>
                <suiteXmlFile>target/test-classes/testng-reader-dot.xml</suiteXmlFile>
              </suiteXmlFiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Generate configuration files for test suite (duplicate of gen-config) -->
      <id>test-config</id>
      <properties>
        <testng.testname>Configuration generation</testng.testname>
        <testng.group>config</testng.group>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <suiteXmlFiles>
                <suiteXmlFile>target/test-classes/testng-reader-dot.xml</suiteXmlFile>
              </suiteXmlFiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Generate configuration files for test suite -->
      <id>gen-config-xml</id>
      <properties>
        <testng.testname>OME-XML configuration generation</testng.testname>
        <testng.group>config-xml</testng.group>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <suiteXmlFiles>
                <suiteXmlFile>target/test-classes/testng-reader-dot.xml</suiteXmlFile>
              </suiteXmlFiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Tests for file reading (automated) -->
      <id>test-automated</id>
      <properties>
        <testng.testname>Automated reader tests</testng.testname>
        <testng.group>automated</testng.group>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <suiteXmlFiles>
                <suiteXmlFile>target/test-classes/testng-reader-order.xml</suiteXmlFile>
              </suiteXmlFiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Tests for file reading (fast; run automated tests in group 'fast') -->
      <id>test-fast</id>
      <properties>
        <testng.testname>Fast reader tests</testng.testname>
        <testng.group>fast</testng.group>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <suiteXmlFiles>
                <suiteXmlFile>target/test-classes/testng-reader-dot-order.xml</suiteXmlFile>
              </suiteXmlFiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Tests for file reading (pixels; run automated tests in group 'pixels') -->
      <id>test-pixels</id>
      <properties>
        <testng.testname>Pixels reader tests</testng.testname>
        <testng.group>pixels</testng.group>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <suiteXmlFiles>
                <suiteXmlFile>target/test-classes/testng-reader-dot-order.xml</suiteXmlFile>
              </suiteXmlFiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Tests for file reading (xml; run automated tests in group 'xml') -->
      <id>test-xml</id>
      <properties>
        <testng.testname>XML reader tests</testng.testname>
        <testng.group>xml</testng.group>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <suiteXmlFiles>
                <suiteXmlFile>target/test-classes/testng-reader-dot-order.xml</suiteXmlFile>
              </suiteXmlFiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Tests for file reading (type; run automated tests in group 'type') -->
      <id>test-type</id>
      <properties>
        <testng.testname>Type reader tests</testng.testname>
        <testng.group>type</testng.group>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <suiteXmlFiles>
                <suiteXmlFile>target/test-classes/testng-reader-dot-order.xml</suiteXmlFile>
              </suiteXmlFiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <!-- Stage releases with nexus -->
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.8</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>false</autoReleaseAfterClose>
            </configuration>
          </plugin>

          <!-- gpg release signing -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
